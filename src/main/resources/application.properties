## use create when running the app for the first time
## then change to "update" which just updates the schema when necessary
spring.jpa.database=POSTGRESQL
spring.datasource.platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.datasource.url=jdbc:postgresql://localhost:5432/portofolio
spring.datasource.username=postgres
spring.datasource.password=
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
## this shows the sql actions in the terminal logs
##optional, but just in case another application is listening on your default  port (8080)
server.port = 8046

#CONFIG JWT
wahyubudi.app.jwtExpirationMs=86400000
wahyubudi.app.jwtSecret=wahyubudiSecretKey

#GMAIL SMTP CONNECTION
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=wahyubudi78@gmail.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
mail.smtp.debug=true

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=100MB
# Max Request Size
spring.servlet.multipart.max-request-size=100MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=C:/Users/ASUS/Documents/multipart_upload

